{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projets\\\\saas_project\\\\frontend\\\\src\\\\pages\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { login } from '../services/authService';\nimport './Login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [credentials, setCredentials] = useState({\n    user_email: '',\n    user_password: ''\n  });\n  const navigate = useNavigate();\n  const handleChange = e => {\n    setCredentials({\n      ...credentials,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const data = await login(credentials.user_email, credentials.user_password);\n      console.log(\"✅ Connexion réussie :\", data);\n      const role = data.user.role;\n      if (role === \"etudiant\") navigate(\"/etudiant\");else if (role === \"entreprise\") navigate(\"/entreprise\");else if (role === \"admin\") navigate(\"/admin\");\n    } catch (err) {\n      var _err$response;\n      console.error(\"❌ Erreur de connexion :\", ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) || err.message);\n      alert(\"Erreur de connexion !\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"login-form\",\n      onSubmit: handleSubmit,\n      autoComplete: \"off\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Connexion\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"user_email\",\n        placeholder: \"Email\",\n        value: credentials.user_email,\n        onChange: handleChange,\n        autoComplete: \"off\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"user_password\",\n        placeholder: \"Mot de passe\",\n        value: credentials.user_password,\n        onChange: handleChange,\n        autoComplete: \"new-password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Se connecter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"ZaQPzzsPZaL3FW/FHBd0efY1HuQ=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","login","jsxDEV","_jsxDEV","Login","_s","credentials","setCredentials","user_email","user_password","navigate","handleChange","e","target","name","value","handleSubmit","preventDefault","data","console","log","role","user","err","_err$response","error","response","message","alert","className","children","onSubmit","autoComplete","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","required","_c","$RefreshReg$"],"sources":["C:/Projets/saas_project/frontend/src/pages/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { login } from '../services/authService';\r\nimport './Login.css';\r\n\r\nconst Login = () => {\r\n  const [credentials, setCredentials] = useState({\r\n    user_email: '',\r\n    user_password: ''\r\n  });\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (e) => {\r\n    setCredentials({ ...credentials, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const data = await login(credentials.user_email, credentials.user_password);\r\n      console.log(\"✅ Connexion réussie :\", data);\r\n\r\n      const role = data.user.role;\r\n      if (role === \"etudiant\") navigate(\"/etudiant\");\r\n      else if (role === \"entreprise\") navigate(\"/entreprise\");\r\n      else if (role === \"admin\") navigate(\"/admin\");\r\n\r\n    } catch (err) {\r\n      console.error(\"❌ Erreur de connexion :\", err.response?.data || err.message);\r\n      alert(\"Erreur de connexion !\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <form className=\"login-form\" onSubmit={handleSubmit} autoComplete=\"off\">\r\n        <h2>Connexion</h2>\r\n        <input\r\n          type=\"email\"\r\n          name=\"user_email\"\r\n          placeholder=\"Email\"\r\n          value={credentials.user_email}\r\n          onChange={handleChange}\r\n          autoComplete=\"off\"\r\n          required\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          name=\"user_password\"\r\n          placeholder=\"Mot de passe\"\r\n          value={credentials.user_password}\r\n          onChange={handleChange}\r\n          autoComplete=\"new-password\"\r\n          required\r\n        />\r\n        <button type=\"submit\">Se connecter</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}