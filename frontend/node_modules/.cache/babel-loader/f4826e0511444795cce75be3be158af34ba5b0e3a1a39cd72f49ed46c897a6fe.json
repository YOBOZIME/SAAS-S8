{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SWIFT 3\\\\Documents\\\\saas_project\\\\frontend\\\\src\\\\pages\\\\EtudiantDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { postuler } from '../services/candidatureService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EtudiantDashboard = () => {\n  _s();\n  const [stages, setStages] = useState([]);\n  useEffect(() => {\n    // Exemple de récupération de stages (à adapter selon ton backend)\n    fetch(\"http://localhost:5000/api/stages\").then(res => res.json()).then(data => setStages(data)).catch(err => console.error(\"Erreur de chargement des stages\", err));\n  }, []);\n  const handlePostuler = async stageId => {\n    try {\n      await postuler(stageId);\n      alert(\"Candidature envoyée !\");\n    } catch (err) {\n      alert(\"Erreur lors de la candidature\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Liste des stages\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: stages.map(stage => {\n        var _stage$entreprise;\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [stage.titre, \" \\u2013 \", (_stage$entreprise = stage.entreprise) === null || _stage$entreprise === void 0 ? void 0 : _stage$entreprise.nom, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handlePostuler(stage.id),\n            children: \"Postuler\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this)]\n        }, stage.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(EtudiantDashboard, \"CPEsY/HaEa791feZepLncz65tfY=\");\n_c = EtudiantDashboard;\nexport default EtudiantDashboard;\nvar _c;\n$RefreshReg$(_c, \"EtudiantDashboard\");","map":{"version":3,"names":["React","useEffect","useState","postuler","jsxDEV","_jsxDEV","EtudiantDashboard","_s","stages","setStages","fetch","then","res","json","data","catch","err","console","error","handlePostuler","stageId","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","map","stage","_stage$entreprise","titre","entreprise","nom","onClick","id","_c","$RefreshReg$"],"sources":["C:/Users/SWIFT 3/Documents/saas_project/frontend/src/pages/EtudiantDashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { postuler } from '../services/candidatureService';\r\n\r\nconst EtudiantDashboard = () => {\r\n  const [stages, setStages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Exemple de récupération de stages (à adapter selon ton backend)\r\n    fetch(\"http://localhost:5000/api/stages\")\r\n      .then(res => res.json())\r\n      .then(data => setStages(data))\r\n      .catch(err => console.error(\"Erreur de chargement des stages\", err));\r\n  }, []);\r\n\r\n  const handlePostuler = async (stageId) => {\r\n    try {\r\n      await postuler(stageId);\r\n      alert(\"Candidature envoyée !\");\r\n    } catch (err) {\r\n      alert(\"Erreur lors de la candidature\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Liste des stages</h2>\r\n      <ul>\r\n        {stages.map((stage) => (\r\n          <li key={stage.id}>\r\n            {stage.titre} – {stage.entreprise?.nom}\r\n            <button onClick={() => handlePostuler(stage.id)}>\r\n              Postuler\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EtudiantDashboard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAExCD,SAAS,CAAC,MAAM;IACd;IACAS,KAAK,CAAC,kCAAkC,CAAC,CACtCC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAIL,SAAS,CAACK,IAAI,CAAC,CAAC,CAC7BC,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,KAAK,CAAC,iCAAiC,EAAEF,GAAG,CAAC,CAAC;EACxE,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,cAAc,GAAG,MAAOC,OAAO,IAAK;IACxC,IAAI;MACF,MAAMjB,QAAQ,CAACiB,OAAO,CAAC;MACvBC,KAAK,CAAC,uBAAuB,CAAC;IAChC,CAAC,CAAC,OAAOL,GAAG,EAAE;MACZK,KAAK,CAAC,+BAA+B,CAAC;IACxC;EACF,CAAC;EAED,oBACEhB,OAAA;IAAAiB,QAAA,gBACEjB,OAAA;MAAAiB,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBrB,OAAA;MAAAiB,QAAA,EACGd,MAAM,CAACmB,GAAG,CAAEC,KAAK;QAAA,IAAAC,iBAAA;QAAA,oBAChBxB,OAAA;UAAAiB,QAAA,GACGM,KAAK,CAACE,KAAK,EAAC,UAAG,GAAAD,iBAAA,GAACD,KAAK,CAACG,UAAU,cAAAF,iBAAA,uBAAhBA,iBAAA,CAAkBG,GAAG,eACtC3B,OAAA;YAAQ4B,OAAO,EAAEA,CAAA,KAAMd,cAAc,CAACS,KAAK,CAACM,EAAE,CAAE;YAAAZ,QAAA,EAAC;UAEjD;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA,GAJFE,KAAK,CAACM,EAAE;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAKb,CAAC;MAAA,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACnB,EAAA,CAnCID,iBAAiB;AAAA6B,EAAA,GAAjB7B,iBAAiB;AAqCvB,eAAeA,iBAAiB;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}